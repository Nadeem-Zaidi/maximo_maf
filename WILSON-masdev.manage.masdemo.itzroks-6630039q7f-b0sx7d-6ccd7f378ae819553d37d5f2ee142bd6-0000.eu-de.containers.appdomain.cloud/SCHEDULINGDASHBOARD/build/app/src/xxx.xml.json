{
  "buffer": "",
  "files": [
    {
      "name": "/graphite/.workspace/WILSON-masdev.manage.masdemo.itzroks-6630039q7f-b0sx7d-6ccd7f378ae819553d37d5f2ee142bd6-0000.eu-de.containers.appdomain.cloud/SCHEDULINGDASHBOARD/build/app/src/PageSchedule.js",
      "buffer": "/* Generated File - Do not edit */\n/* turn off unused variables that we know we are creating because it is generated code */\n/* eslint no-unused-vars: off */\n/* turn off lone blocks that we know we are creating because it is generated code due to content switchers */\n/* eslint no-lone-blocks: off */\n/* turn off === vs == because these are user created == from the MAML file */\n/* eslint eqeqeq: off */\n/* Turn off React Camel Case warnings, since generated files might not always have proper camel case */\n/* eslint react/jsx-pascal-case: off */\n/* Turn off React 17 lints in generated code */\n/* eslint react/prop-types: off */\n/* eslint complexity: off */\n/* eslint no-shadow: off */\n/* eslint no-duplicate-imports: off */\n/* eslint function-paren-newline: off */\n/* eslint jsx-quotes: off */\n/* eslint dot-notation: off */\n/* eslint no-nested-ternary: off */\n/* eslint no-implicit-coercion: off */\n/* eslint func-style: off */\n/* eslint implicit-arrow-linebreak: off */\n/* eslint react/jsx-key: off */\n/* eslint react/no-children-prop: off */\n/* eslint new-cap: off */\n/* eslint radix: off */\n/* eslint no-empty-function: off */\n/* eslint array-bracket-newline: off */\n/* eslint no-class-assign: off */\n/* eslint init-declarations: off */\n/* eslint no-console: off */\n/* eslint import/first: off */\n/* eslint no-func-assign: off */\n\nimport React, { Component, useEffect, useState } from 'react';\nimport { observer, Provider, inject } from 'mobx-react';\nimport { Datasource } from '@maximo/maximo-js-api';\nimport { JSONDataAdapter } from '@maximo/maximo-js-api';\nimport { Observer } from 'mobx-react';\nimport { PageHeaderTemplate } from '@maximo/react-components';\nimport { Dropdown } from '@maximo/react-components';\nimport { PageLayout } from '@maximo/react-components';\n\n// our main generated App\nclass PageSchedule extends Component {\n  componentDidMount() {\n    let props = this.props;\n    let page = props.app.findPage('schedule');\n    if (page) {\n      // let's do this about 100 ms after the first render, to allow for other activities to begin the load\n      setTimeout(() => {\n        // load any datasources that were referenced in the render call,\n        // but, not loaded at the time they were accessed.\n        page.emit('load-datasources');\n      }, 100);\n    }\n  }\n  render() {\n    const props = this.props;\n    const app = props.app;\n    const page = app.findPage('schedule');\n    page.emit('page-render', {\n      page: 'schedule'\n    });\n    app.log.t(\"UI\", '[schedule]: Page UI is rendering');\n    const datasource = page.getMainDatasource();\n    const item = datasource ? datasource.item : undefined;\n    const index = datasource ? datasource.state.currentItemIndex : -1;\n    const itemId = item ? item[datasource.options.idAttribute] : undefined;\n    const eventManager = props.eventManager || datasource || page;\n    const dialog = null;\n    const templateContext = {};\n    const skdprojectDS = props.skdprojectDS || app.findDatasource(\"skdprojectDS\");\n    const mySchedules = props.mySchedules || app.findDatasource(\"mySchedules\");\n    const myCommitSchedules = props.myCommitSchedules || app.findDatasource(\"myCommitSchedules\");\n    const skdodmerunDS = props.skdodmerunDS || app.findDatasource(\"skdodmerunDS\");\n    const jdashboardKPIds = props.jdashboardKPIds || app.findDatasource(\"jdashboardKPIds\");\n    return /*#__PURE__*/React.createElement(PageLayout, {\n      id: \"schedule\",\n      className: \"mx--page\",\n      padding: true,\n      stickyHeader: false,\n      dockedFooter: false,\n      skipTouchThemeBottomPadding: false,\n      app: app,\n      partOfRouter: true\n    }, /*#__PURE__*/React.createElement(Observer, null, () => /*#__PURE__*/React.createElement(PageHeaderTemplate, {\n      title: \"Scheduling dashboard\",\n      hideBreadcrumb: true,\n      margin: \"none\",\n      id: \"ab3a4-pageheader\",\n      stackBreadcrumbsWithTabs: true,\n      enableNfcScanner: true,\n      mode: \"dynamic\",\n      datacomponenttype: \"header-template\",\n      datacomponentoriginalid: \"ab3a4\",\n      app: app,\n      dropdown: /*#__PURE__*/React.createElement(Dropdown, {\n        id: \"y49am\",\n        items: [{\n          id: \"mySchedules\",\n          text: \"My Schedules\",\n          disabled: undefined,\n          hidden: undefined\n        }, {\n          id: \"myCommitSchedules\",\n          text: \"My Commit Schedules\",\n          disabled: undefined,\n          hidden: undefined\n        }],\n        onChange: event => {\n          page.state.selectedDatasource = event.selectedItem.id;\n        },\n        selectedItem: page.state.selectedDatasource,\n        itemValueField: \"id\",\n        itemTextField: \"text\",\n        itemToString: item => {\n          return item ? item.text : '';\n        },\n        hideUnspecified: true,\n        size: \"none\",\n        height: \"tall\",\n        padding: true,\n        backgroundColor: \"white\"\n      })\n    })));\n  }\n}\nexport default inject('app')(observer(PageSchedule));"
    }
  ]
}